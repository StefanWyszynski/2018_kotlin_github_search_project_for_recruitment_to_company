apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.assignment"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName '1.0.0'
        multiDexEnabled true
        testInstrumentationRunner = 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mock"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }

    }
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    def support_version = "28.0.0"

    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation 'com.android.support:multidex:1.0.3'

    // support libraries
    implementation "com.android.support:cardview-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"


    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // architecture components
    def lifecycle_version = "1.1.1"
    String archVersion = '1.0.0'
    kapt "android.arch.lifecycle:compiler:$archVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"

    // RxJava2
    implementation "io.reactivex.rxjava2:rxjava:2.1.2"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    // RxBindig
    implementation "com.jakewharton.rxbinding2:rxbinding:2.0.0"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0"

    /* Retrofit 2*/
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    /* Gson */
    implementation 'com.google.code.gson:gson:2.8.5'

    /* OKHttp3 */
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    // glide for avatar downloading
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'

    // dagger
    def dagger_version = '2.17'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // testing
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    testImplementation 'android.arch.core:core-testing:1.0.0-alpha3'

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    //{
  //      exclude group: 'com.android.support', module: 'support-annotations'
  //  }
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"

}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

repositories {
    mavenCentral()
}
